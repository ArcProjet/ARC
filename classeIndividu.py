# -*- coding: utf-8 -*-
"""
Created on Fri Nov 18 10:37:39 2022

@author: jeanh
"""

from primitive import *
from random import randint
import classeGrille
from JsonLoader import *

toutesNosFonctions = [gridCopy,completed0,completed1,completed2,completed3,completed4,completed5,completed6,completed7,completed8,completed9,axialSymmetryX,axialSymmetryY,centralSymetry,copyHalfX,copyHalfY,doubleSymetryRow,doubleSymetryColumn,xHalf,yHalf,lenghtReduction,widthReduction,doubleRow,doubleColumn,rotateLeft,rotateRight,translationEnHaut,translationADroite,translationEnBas,translationAGauche,extendColorUp0,extendColorUp1,extendColorUp2,extendColorUp3,extendColorUp4,extendColorUp5,extendColorUp6,extendColorUp7,extendColorUp8,extendColorUp9,extendColorDown0,extendColorDown1,extendColorDown2,extendColorDown3,extendColorDown4,extendColorDown5,extendColorDown6,extendColorDown7,extendColorDown8,extendColorDown9,extendColorLeft0,extendColorLeft1,extendColorLeft2,extendColorLeft3,extendColorLeft4,extendColorLeft5,extendColorLeft6,extendColorLeft7,extendColorLeft8,extendColorLeft9,extendColorRight0,extendColorRight1,extendColorRight2,extendColorRight3,extendColorRight4,extendColorRight5,extendColorRight6,extendColorRight7,extendColorRight8,extendColorRight9,widthColorAugmentation_0,widthColorAugmentation_1,widthColorAugmentation_2,widthColorAugmentation_3,widthColorAugmentation_4,widthColorAugmentation_5,widthColorAugmentation_6,widthColorAugmentation_7,widthColorAugmentation_8,widthColorAugmentation_9,lengthColorAugmentation_0,lengthColorAugmentation_1,lengthColorAugmentation_2,lengthColorAugmentation_3,lengthColorAugmentation_4,lengthColorAugmentation_5,lengthColorAugmentation_6,lengthColorAugmentation_7,lengthColorAugmentation_8,lengthColorAugmentation_9,growingColor0,growingColor1,growingColor2,growingColor3,growingColor4,growingColor5,growingColor6,growingColor7,growingColor8,growingColor9,removeNoise0,removeNoise1,removeNoise2,removeNoise3,removeNoise4,removeNoise5,removeNoise6,removeNoise7,removeNoise8,removeNoise9,changeAColor0_1,changeAColor0_2,changeAColor0_3,changeAColor0_4,changeAColor0_5,changeAColor0_6,changeAColor0_7,changeAColor0_8,changeAColor0_9,changeAColor1_0,changeAColor1_2,changeAColor1_3,changeAColor1_4,changeAColor1_5,changeAColor1_6,changeAColor1_7,changeAColor1_8,changeAColor1_9,changeAColor2_0,changeAColor2_1,changeAColor2_3,changeAColor2_4,changeAColor2_5,changeAColor2_6,changeAColor2_7,changeAColor2_8,changeAColor2_9,changeAColor3_0,changeAColor3_1,changeAColor3_2,changeAColor3_4,changeAColor3_5,changeAColor3_6,changeAColor3_7,changeAColor3_8,changeAColor3_9,changeAColor4_0,changeAColor4_1,changeAColor4_2,changeAColor4_3,changeAColor4_5,changeAColor4_6,changeAColor4_7,changeAColor4_8,changeAColor4_9,changeAColor5_0,changeAColor5_1,changeAColor5_2,changeAColor5_3,changeAColor5_4,changeAColor5_6,changeAColor5_7,changeAColor5_8,changeAColor5_9,changeAColor6_0,changeAColor6_1,changeAColor6_2,changeAColor6_3,changeAColor6_4,changeAColor6_5,changeAColor6_7,changeAColor6_8,changeAColor6_9,changeAColor7_0,changeAColor7_1,changeAColor7_2,changeAColor7_3,changeAColor7_4,changeAColor7_5,changeAColor7_6,changeAColor7_8,changeAColor7_9,changeAColor8_0,changeAColor8_1,changeAColor8_2,changeAColor8_3,changeAColor8_4,changeAColor8_5,changeAColor8_6,changeAColor8_7,changeAColor8_9,changeAColor9_0,changeAColor9_1,changeAColor9_2,changeAColor9_3,changeAColor9_4,changeAColor9_5,changeAColor9_6,changeAColor9_7,changeAColor9_8,extendLine5_0,extendLine5_1,extendLine5_2,extendLine5_3,extendLine5_4,extendLine5_5,extendLine5_6,extendLine5_7,extendLine5_8,extendLine5_9,extendLine10_0,extendLine10_1,extendLine10_2,extendLine10_3,extendLine10_4,extendLine10_5,extendLine10_6,extendLine10_7,extendLine10_8,extendLine10_9,extendLine15_0,extendLine15_1,extendLine15_2,extendLine15_3,extendLine15_4,extendLine15_5,extendLine15_6,extendLine15_7,extendLine15_8,extendLine15_9,extendLine20_0,extendLine20_1,extendLine20_2,extendLine20_3,extendLine20_4,extendLine20_5,extendLine20_6,extendLine20_7,extendLine20_8,extendLine20_9,extendLine25_0,extendLine25_1,extendLine25_2,extendLine25_3,extendLine25_4,extendLine25_5,extendLine25_6,extendLine25_7,extendLine25_8,extendLine25_9,extendLine30_0,extendLine30_1,extendLine30_2,extendLine30_3,extendLine30_4,extendLine30_5,extendLine30_6,extendLine30_7,extendLine30_8,extendLine30_9,extendLine35_0,extendLine35_1,extendLine35_2,extendLine35_3,extendLine35_4,extendLine35_5,extendLine35_6,extendLine35_7,extendLine35_8,extendLine35_9,extendLine40_0,extendLine40_1,extendLine40_2,extendLine40_3,extendLine40_4,extendLine40_5,extendLine40_6,extendLine40_7,extendLine40_8,extendLine40_9,extendLine45_0,extendLine45_1,extendLine45_2,extendLine45_3,extendLine45_4,extendLine45_5,extendLine45_6,extendLine45_7,extendLine45_8,extendLine45_9,extendLine50_0,extendLine50_1,extendLine50_2,extendLine50_3,extendLine50_4,extendLine50_5,extendLine50_6,extendLine50_7,extendLine50_8,extendLine50_9,extendLine55_0,extendLine55_1,extendLine55_2,extendLine55_3,extendLine55_4,extendLine55_5,extendLine55_6,extendLine55_7,extendLine55_8,extendLine55_9,extendLine60_0,extendLine60_1,extendLine60_2,extendLine60_3,extendLine60_4,extendLine60_5,extendLine60_6,extendLine60_7,extendLine60_8,extendLine60_9,extendLine65_0,extendLine65_1,extendLine65_2,extendLine65_3,extendLine65_4,extendLine65_5,extendLine65_6,extendLine65_7,extendLine65_8,extendLine65_9,extendLine70_0,extendLine70_1,extendLine70_2,extendLine70_3,extendLine70_4,extendLine70_5,extendLine70_6,extendLine70_7,extendLine70_8,extendLine70_9,extendLine75_0,extendLine75_1,extendLine75_2,extendLine75_3,extendLine75_4,extendLine75_5,extendLine75_6,extendLine75_7,extendLine75_8,extendLine75_9,extendLine80_0,extendLine80_1,extendLine80_2,extendLine80_3,extendLine80_4,extendLine80_5,extendLine80_6,extendLine80_7,extendLine80_8,extendLine80_9,extendLine85_0,extendLine85_1,extendLine85_2,extendLine85_3,extendLine85_4,extendLine85_5,extendLine85_6,extendLine85_7,extendLine85_8,extendLine85_9,extendLine90_0,extendLine90_1,extendLine90_2,extendLine90_3,extendLine90_4,extendLine90_5,extendLine90_6,extendLine90_7,extendLine90_8,extendLine90_9,extendLine95_0,extendLine95_1,extendLine95_2,extendLine95_3,extendLine95_4,extendLine95_5,extendLine95_6,extendLine95_7,extendLine95_8,extendLine95_9,extendLine100_0,extendLine100_1,extendLine100_2,extendLine100_3,extendLine100_4,extendLine100_5,extendLine100_6,extendLine100_7,extendLine100_8,extendLine100_9,extendColumn5_0,extendColumn5_1,extendColumn5_2,extendColumn5_3,extendColumn5_4,extendColumn5_5,extendColumn5_6,extendColumn5_7,extendColumn5_8,extendColumn5_9,extendColumn10_0,extendColumn10_1,extendColumn10_2,extendColumn10_3,extendColumn10_4,extendColumn10_5,extendColumn10_6,extendColumn10_7,extendColumn10_8,extendColumn10_9,extendColumn15_0,extendColumn15_1,extendColumn15_2,extendColumn15_3,extendColumn15_4,extendColumn15_5,extendColumn15_6,extendColumn15_7,extendColumn15_8,extendColumn15_9,extendColumn20_0,extendColumn20_1,extendColumn20_2,extendColumn20_3,extendColumn20_4,extendColumn20_5,extendColumn20_6,extendColumn20_7,extendColumn20_8,extendColumn20_9,extendColumn25_0,extendColumn25_1,extendColumn25_2,extendColumn25_3,extendColumn25_4,extendColumn25_5,extendColumn25_6,extendColumn25_7,extendColumn25_8,extendColumn25_9,extendColumn30_0,extendColumn30_1,extendColumn30_2,extendColumn30_3,extendColumn30_4,extendColumn30_5,extendColumn30_6,extendColumn30_7,extendColumn30_8,extendColumn30_9,extendColumn35_0,extendColumn35_1,extendColumn35_2,extendColumn35_3,extendColumn35_4,extendColumn35_5,extendColumn35_6,extendColumn35_7,extendColumn35_8,extendColumn35_9,extendColumn40_0,extendColumn40_1,extendColumn40_2,extendColumn40_3,extendColumn40_4,extendColumn40_5,extendColumn40_6,extendColumn40_7,extendColumn40_8,extendColumn40_9,extendColumn45_0,extendColumn45_1,extendColumn45_2,extendColumn45_3,extendColumn45_4,extendColumn45_5,extendColumn45_6,extendColumn45_7,extendColumn45_8,extendColumn45_9,extendColumn50_0,extendColumn50_1,extendColumn50_2,extendColumn50_3,extendColumn50_4,extendColumn50_5,extendColumn50_6,extendColumn50_7,extendColumn50_8,extendColumn50_9,extendColumn55_0,extendColumn55_1,extendColumn55_2,extendColumn55_3,extendColumn55_4,extendColumn55_5,extendColumn55_6,extendColumn55_7,extendColumn55_8,extendColumn55_9,extendColumn60_0,extendColumn60_1,extendColumn60_2,extendColumn60_3,extendColumn60_4,extendColumn60_5,extendColumn60_6,extendColumn60_7,extendColumn60_8,extendColumn60_9,extendColumn65_0,extendColumn65_1,extendColumn65_2,extendColumn65_3,extendColumn65_4,extendColumn65_5,extendColumn65_6,extendColumn65_7,extendColumn65_8,extendColumn65_9,extendColumn70_0,extendColumn70_1,extendColumn70_2,extendColumn70_3,extendColumn70_4,extendColumn70_5,extendColumn70_6,extendColumn70_7,extendColumn70_8,extendColumn70_9,extendColumn75_0,extendColumn75_1,extendColumn75_2,extendColumn75_3,extendColumn75_4,extendColumn75_5,extendColumn75_6,extendColumn75_7,extendColumn75_8,extendColumn75_9,extendColumn80_0,extendColumn80_1,extendColumn80_2,extendColumn80_3,extendColumn80_4,extendColumn80_5,extendColumn80_6,extendColumn80_7,extendColumn80_8,extendColumn80_9,extendColumn85_0,extendColumn85_1,extendColumn85_2,extendColumn85_3,extendColumn85_4,extendColumn85_5,extendColumn85_6,extendColumn85_7,extendColumn85_8,extendColumn85_9,extendColumn90_0,extendColumn90_1,extendColumn90_2,extendColumn90_3,extendColumn90_4,extendColumn90_5,extendColumn90_6,extendColumn90_7,extendColumn90_8,extendColumn90_9,extendColumn95_0,extendColumn95_1,extendColumn95_2,extendColumn95_3,extendColumn95_4,extendColumn95_5,extendColumn95_6,extendColumn95_7,extendColumn95_8,extendColumn95_9,extendColumn100_0,extendColumn100_1,extendColumn100_2,extendColumn100_3,extendColumn100_4,extendColumn100_5,extendColumn100_6,extendColumn100_7,extendColumn100_8,extendColumn100_9]#[axialSymmetryX,axialSymmetryY,centralSymetry,copyHalfX,copyHalfY,doubleSymetryRow,doubleSymetryColumn,xHalf,yHalf,doubleRow,doubleColumn,rotateLeft,rotateRight,translationEnHaut,translationADroite,translationEnBas,translationAGauche,extendColorUp0,extendColorUp1,extendColorUp2,extendColorUp3,extendColorUp4,extendColorUp5,extendColorUp6,extendColorUp7,extendColorUp8,extendColorUp9,extendColorDown0,extendColorDown1,extendColorDown2,extendColorDown3,extendColorDown4,extendColorDown5,extendColorDown6,extendColorDown7,extendColorDown8,extendColorDown9,extendColorLeft0,extendColorLeft1,extendColorLeft2,extendColorLeft3,extendColorLeft4,extendColorLeft5,extendColorLeft6,extendColorLeft7,extendColorLeft8,extendColorLeft9,extendColorRight0,extendColorRight1,extendColorRight2,extendColorRight3,extendColorRight4,extendColorRight5,extendColorRight6,extendColorRight7,extendColorRight8,extendColorRight9,growingColor0,growingColor1,growingColor2,growingColor3,growingColor4,growingColor5,growingColor6,growingColor7,growingColor8,growingColor9,removeNoise0,removeNoise1,removeNoise2,removeNoise3,removeNoise4,removeNoise5,removeNoise6,removeNoise7,removeNoise8,removeNoise9,changeAColor0_1,changeAColor0_2,changeAColor0_3,changeAColor0_4,changeAColor0_5,changeAColor0_6,changeAColor0_7,changeAColor0_8,changeAColor0_9,changeAColor1_0,changeAColor1_2,changeAColor1_3,changeAColor1_4,changeAColor1_5,changeAColor1_6,changeAColor1_7,changeAColor1_8,changeAColor1_9,changeAColor2_0,changeAColor2_1,changeAColor2_3,changeAColor2_4,changeAColor2_5,changeAColor2_6,changeAColor2_7,changeAColor2_8,changeAColor2_9,changeAColor3_0,changeAColor3_1,changeAColor3_2,changeAColor3_4,changeAColor3_5,changeAColor3_6,changeAColor3_7,changeAColor3_8,changeAColor3_9,changeAColor4_0,changeAColor4_1,changeAColor4_2,changeAColor4_3,changeAColor4_5,changeAColor4_6,changeAColor4_7,changeAColor4_8,changeAColor4_9,changeAColor5_0,changeAColor5_1,changeAColor5_2,changeAColor5_3,changeAColor5_4,changeAColor5_6,changeAColor5_7,changeAColor5_8,changeAColor5_9,changeAColor6_0,changeAColor6_1,changeAColor6_2,changeAColor6_3,changeAColor6_4,changeAColor6_5,changeAColor6_7,changeAColor6_8,changeAColor6_9,changeAColor7_0,changeAColor7_1,changeAColor7_2,changeAColor7_3,changeAColor7_4,changeAColor7_5,changeAColor7_6,changeAColor7_8,changeAColor7_9,changeAColor8_0,changeAColor8_1,changeAColor8_2,changeAColor8_3,changeAColor8_4,changeAColor8_5,changeAColor8_6,changeAColor8_7,changeAColor8_9,changeAColor9_0,changeAColor9_1,changeAColor9_2,changeAColor9_3,changeAColor9_4,changeAColor9_5,changeAColor9_6,changeAColor9_7,changeAColor9_8]
taille = 20 # taille du tableau "fonctions",

class Individu:

    def __init__(self, numeroConstructeur, gridInput, gridWishes):
        
        if(numeroConstructeur == 0):
            self.score = 0
            self.fonctions = [None] * taille # création d'une nouvelle liste vide pour chaque individu
            self.grille = [] # visiblement null n'existe pas en python
            self.population # bien utile pour accéder à l'image espérée utilisée dans "attribuerScore"       
    # def genererIndividu(self): # peut être le mettre sous la forme d'un constructeur
        else:
            self.score = 0
            self.gridInput = gridInput#.copy()
            self.gridWishes = gridWishes#.copy()
            self.fonctions = [None] * taille # création d'une nouvelle liste vide pour chaque individu
            self.grille = [] # visiblement null n'existe pas en python
            for i in range (0, taille): # remplissage complet de la liste
                self.ajouterFonction(i)
            self.genererGrille()
            #self.attribuerScore()
    
    def genererGrille(self):
        for g in self.gridInput:
            self.grille.append(classeGrille.Grille(g))
        
    def ajouterFonction(self, index):
        self.fonctions[index] = toutesNosFonctions[randint(0, len(toutesNosFonctions) - 1)] # remplissage à l'index donné de la liste   
          
    def attribuerScore(self):
        # compare l'image générée par l'individu à l'image attendue
        tmp = 0
        for i in range(len(self.gridInput)):
            tmp += self.grille[i].comparer(self.gridWishes[i]) # compare est une méthode de la classe Grid
        self.score = tmp/(len(self.gridInput))
        #print(self.score if self.score > 50 else "")
        
    def croiser2Individus(self, individu2): # on fabrique unn nouvel individu à partir de 2 individus de la génération précédente
        newIndividu = Individu(1,self.imageDepart,self.imageEsperee)
        for i in range (0,taille//2):
            newIndividu.fonctions[i * 2] = self.fonctions[i * 2] # les index pairs du tableau "fonctions" associé au
            #nouvel individu seront remplis avec les index pairs du tableau associé à l'individu "self"
            newIndividu.fonctions[i * 2 + 1] = individu2.fonctions[i * 2 + 1] #idem en remplaçant pair par impair """
            
    def muter(self): # modifie un individu de la génération précédente
        index = randint(0, taille - 1)
        self.fonctions[index] = toutesNosFonctions[randint(0, len(toutesNosFonctions) - 1)] # on remplace une
        #fonction au hasard de notre individu par une fonction choisie au hasard présente dans notre base de fonctions
        
        
        
            
            
        
        
        
        
